const { cmd } = require('../command');
const { runtime } = require('../inconnuboy/functions');
const config = require('../config');

cmd({
    pattern: "uptime",
    alias: ["runtime", "run"],
    desc: "Show bot uptime with stylish formats",
    category: "general",
    react: "‚è±Ô∏è",
    filename: __filename
},
async (conn, mek, m, { from, reply }) => {
    try {
        const uptime = runtime(process.uptime());
        const startTime = new Date(Date.now() - process.uptime() * 1000);
        
        // Style 1: Classic Box
        const style1 = `‚ï≠‚îÄ‚îÄ‚îÄ„Äé UPTIME „Äè‚îÄ‚îÄ‚îÄ‚≥π
‚îÇ
‚îÇ ‚ú¶ ${uptime}
‚îÇ
‚îÇ ‚ú¶ Started: ${startTime.toLocaleString()}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≥π
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è inconnu boy*`;

        // Style 2: Minimalist
        const style2 = `‚Ä¢‚Äî‚Äî[ UPTIME ]‚Äî‚Äî‚Ä¢
  ‚îÇ
  ‚îú‚îÄ ‚ú¶ ${uptime}
  ‚îú‚îÄ ‚ú¶ Since: ${startTime.toLocaleTimeString()}
  ‚îÇ
  ‚Ä¢‚Äî‚Äî[ *QUEEN ASUNA* ]‚Äî‚Äî‚Ä¢`;

        // Style 3: Fancy Borders
        const style3 = `‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ QUEEN ASUNA UPTIME ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ

  ‚ô¢
  ‚ú¶ Running: ${uptime}
  ‚ú¶ Since: ${startTime.toLocaleDateString()}
  
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è inconnu boy*`;

        // Style 4: Code Style
        const style4 = `‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  üë∏ UPTIME STATUS üë∏  ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÇ ‚Ä¢ Time: ${uptime}
‚îÇ ‚Ä¢ Started: ${startTime.toLocaleString()}
‚îÇ ‚Ä¢ Version: 1.0.0
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò`;

        // Style 5: Modern Blocks
        const style5 = `‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ UPTIME ‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

  ‚è≥ ${uptime}
  üï∞Ô∏è ${startTime.toLocaleString()}
  
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ö è ô è ·¥õ·¥á·¥Ñ ú*`;

        // Style 6: Retro Terminal
        const style6 = `‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë   QUEEN ASUNA UPTIME    
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
‚ïë  RUNTIME: ${uptime}
‚ïë  SINCE: ${startTime.toLocaleString()}
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù`;

        // Style 7: Elegant
        const style7 = `‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  ‚è±Ô∏è  UPTIME  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚îÇ ${uptime}
‚îÇ
‚îÇ Since ${startTime.toLocaleDateString()}
‚îÇ
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ QUEEN ASUNA 
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò`;

        // Style 8: Social Media Style
        const style8 = `‚è±Ô∏è *Uptime Report* ‚è±Ô∏è

üü¢ Online for: ${uptime}
üìÖ Since: ${startTime.toLocaleString()}


> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è inconnu boy*`;

        // Style 9: Fancy List
        const style9 = `
‚ïî‚ô´‚ïê‚è±Ô∏è‚ïê‚ô´‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
 QUEEN ASUNA UPTIME
‚ïö‚ô´‚ïê‚è±Ô∏è‚ïê‚ô´‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

‚Ä¢„Éª„Çú„Çú„Éª* ‚úß  *„Éª„Çú„Çú„Éª‚Ä¢
 ‚úß ${uptime}
 ‚úß Since ${startTime.toLocaleDateString()}
‚Ä¢„Éª„Çú„Çú„Éª* ‚úß  *„Éª„Çú„Çú„Éª‚Ä¢`;

        // Style 10: Professional
        const style10 = `
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚îÉ  üë∏ QUEEN ASUNA üë∏  ‚îÉ
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ

‚ú¶ Duration: ${uptime}
‚ú¶ Start Time: ${startTime.toLocaleString()}
‚ú¶ Stability: 100%
‚ú¶ Version:  1.0.0

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è inconnu boy*`;

        const styles = [style1, style2, style3, style4, style5, style6, style7, style8, style9, style10];
        const selectedStyle = styles[Math.floor(Math.random() * styles.length)];

        await conn.sendMessage(from, { 
            text: selectedStyle,
            contextInfo: {
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363397722863547@newsletter',
                    newsletterName: config.OWNER_NAME || 'QUEEN ASUNA MD',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

    } catch (e) {
        console.error("Uptime Error:", e);
        reply(`‚ùå Error: ${e.message}`);
    }
});
                        
