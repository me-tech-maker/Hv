const fetch = require('node-fetch');
const config = require('../config');
const { cmd } = require('../command');

cmd({
    pattern: "repo",
    alias: ["sc", "script", "info"],
    desc: "Fetch GitHub repository information",
    react: "üìÇ",
    category: "general",
    filename: __filename,
},
async (conn, mek, m, { from, reply }) => {
    const githubRepoURL = 'https://github.com/INCONNU-BOY/QUEEN-ASUNA-MD';

    try {
        const [, username, repoName] = githubRepoURL.match(/github\.com\/([^/]+)\/([^/]+)/);
        const response = await fetch(`https://api.github.com/repos/${username}/${repoName}`);
        
        if (!response.ok) throw new Error(`GitHub API error: ${response.status}`);
        const repoData = await response.json();

        // Format 1: Classic Box
        const style1 = `‚ï≠‚îÄ‚îÄ„Äé QUEEN ASUNA „Äè‚îÄ‚îÄ‚≥π
‚îÇ
‚îÇ üì¶ *Repository*: ${repoData.name}
‚îÇ üëë *Owner*: ${repoData.owner.login}
‚îÇ ‚≠ê *Stars*: ${repoData.stargazers_count}
‚îÇ ‚ëÇ *Forks*: ${repoData.forks_count}
‚îÇ üîó *URL*: ${repoData.html_url}
‚îÇ
‚îÇ üìù *Description*:
‚îÇ ${repoData.description || 'No description'}
‚îÇ
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≥π
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è inconnu boy*`;

    

        // Format 4: Code Style
        const style4 = `
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  üë∏ QUEEN ASUNA MD üë∏  
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÇ ‚Ä¢ Name: ${repoData.name}
‚îÇ ‚Ä¢ Owner: ${repoData.owner.login}
‚îÇ ‚Ä¢ Stars: ${repoData.stargazers_count}
‚îÇ ‚Ä¢ Forks: ${repoData.forks_count}
‚îÇ ‚Ä¢ URL: ${repoData.html_url}
‚îÇ ‚Ä¢ Desc: ${repoData.description || 'None'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è inconnu boy*`;

        // Format 5: Modern Blocks
        const style5 = `‚ñ∞‚ñ∞‚ñ∞‚ñ∞QUEEN ASUNA‚ñ∞‚ñ∞‚ñ∞‚ñ∞

  üè∑Ô∏è  *${repoData.name}*
  üë®‚Äçüíª  ${repoData.owner.login}
  
  ‚≠ê ${repoData.stargazers_count}  ‚ëÇ ${repoData.forks_count}
  üîó ${repoData.html_url}
  
  üìú ${repoData.description || 'No description'}
  
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è inconnu boy*`;

        // Format 6: Retro Terminal
        const style6 = `
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë üë∏   QUEEN ASUNA MD   üë∏
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë NAME: ${repoData.name}
‚ïë OWNER: ${repoData.owner.login}
‚ïë STARS: ${repoData.stargazers_count}
‚ïë FORKS: ${repoData.forks_count}
‚ïë URL: ${repoData.html_url}
‚ïë DESC: ${repoData.description || 'None'}
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è inconnu boy*`;

        

        // Format 8: Social Media Style
        const style8 = `‚ú¶ QUEEN ASUNA MD ‚ú¶

üìå *${repoData.name}*
üë§ @${repoData.owner.login}

‚≠ê ${repoData.stargazers_count} Stars | ‚ëÇ ${repoData.forks_count} Forks
üîÑ Last updated: ${new Date(repoData.updated_at).toLocaleDateString()}

üîó GitHub: ${repoData.html_url}

${repoData.description || 'No description available'}

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è inconnu boy*`;


        // Format 10: Professional
        const style10 = `
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
 üë∏REPOSITORY REPORTüë∏
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ

‚ú¶ Project: ${repoData.name}
‚ú¶ Maintainer: ${repoData.owner.login}
‚ú¶ Popularity: ‚òÖ ${repoData.stargazers_count} | ‚ëÇ ${repoData.forks_count}
‚ú¶ Last Update: ${new Date(repoData.updated_at).toLocaleDateString()}
‚ú¶ URL: ${repoData.html_url}

Description:
${repoData.description || 'No description provided'}

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è inconnu boy*`;

        const styles = [style1, style4, style5, style6, style8, style10];
        const selectedStyle = styles[Math.floor(Math.random() * styles.length)];

        // Send image with repo info
        await conn.sendMessage(from, {
            image: { url: `https://files.catbox.moe/kmrq7z.jpg` },
            caption: selectedStyle,
            contextInfo: { 
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363397722863547@newsletter',
                    newsletterName: 'QUEEN ASUNA MD',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

        
    } catch (error) {
        console.error("Repo command error:", error);
        reply(`‚ùå Error: ${error.message}`);
    }
});
          
